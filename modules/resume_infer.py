# -*- coding: utf-8 -*-
"""resume_infer

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XHS9dhBztdUBsqJySDmilmOUVVgAT0eR
"""

import pickle, pandas as pd, numpy as np
from sklearn.preprocessing import LabelEncoder
from sklearn.feature_extraction.text import TfidfVectorizer
from tensorflow.keras.models import load_model

def classify_text_tf(text: str,
                     model_path="models_tf/resume_classifier.h5",
                     vectorizer_path="models_tf/tfidf_vectorizer.pkl",
                     label_encoder_path="models_tf/label_encoder.pkl",
                     top_k=5):
    # Load artifacts
    model = load_model(model_path)
    with open(vectorizer_path, "rb") as f:
        vectorizer: TfidfVectorizer = pickle.load(f)
    with open(label_encoder_path, "rb") as f:
        le: LabelEncoder = pickle.load(f)

    # Vectorize
    X = vectorizer.transform([text]).toarray()

    # Predict
    probs = model.predict(X, verbose=0)[0]
    top_idx = np.argsort(probs)[::-1][:top_k]
    labels = le.inverse_transform(top_idx)
    top_df = pd.DataFrame({"label": labels, "probability": probs[top_idx]})
    return labels[0], top_df















