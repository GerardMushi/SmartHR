# -*- coding: utf-8 -*-
"""app_resume

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XHS9dhBztdUBsqJySDmilmOUVVgAT0eR
"""
# tabs/resume_tab.py

import streamlit as st
from PyPDF2 import PdfReader
from modules.resume_infer import classify_text_tf

def classify_resume_app():
    """Mostra la dashboard per la classificazione dei CV"""
    st.header("Resume Classifier")
    st.caption("Upload or paste a resume.")

    # Sidebar
    top_k = st.sidebar.slider("Top-K predictions", 1, 5, 3, 1)

    # Input
    tab1, tab2 = st.tabs(["üìÑ Upload PDF", "‚úèÔ∏è Paste Text"])
    resume_text = ""

    with tab1:
        pdf_file = st.file_uploader("Upload a resume (PDF)", type=["pdf"])
        if pdf_file:
            reader = PdfReader(pdf_file)
            text_parts = []
            for p in reader.pages:
                try:
                    text_parts.append(p.extract_text() or "")
                except:
                    pass
            resume_text = "\n".join(text_parts)

    with tab2:
        t = st.text_area("Paste resume text here", height=250)
        if t.strip():
            resume_text = t.strip()

    if st.button("Classify"):
        if not resume_text:
            st.error("Please upload a PDF or paste text.")
        else:
            label, topk_df = classify_text_tf(resume_text, top_k=top_k)
            st.success(f"Predicted label: **{label}**")

            st.subheader("Top-K Predictions")
            st.dataframe(topk_df, use_container_width=True)

            st.bar_chart(topk_df.set_index("label")["probability"])
            st.markdown("### Resume Text")
            st.text_area("Resume Text", resume_text, height=400)











