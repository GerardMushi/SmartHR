# -*- coding: utf-8 -*-
"""main_app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XHS9dhBztdUBsqJySDmilmOUVVgAT0eR
"""

# main_app.py

import streamlit as st
from tabs.absenteeism_tab import show_absenteeism_analysis
from tabs.attrition_tab import show_attrition_analysis
from tabs.resume_tab import classify_resume_app

# -------------------
# Config
# -------------------
st.set_page_config(page_title="Smart HR Dashboard", page_icon="üìä", layout="wide")

# Dummy credentials (cambia con i tuoi o con env vars)
USERNAME = "admin"
PASSWORD = "1234"

# -------------------
# Gestione sessione
# -------------------
if "logged_in" not in st.session_state:
    st.session_state.logged_in = False
if "active_dashboard" not in st.session_state:
    st.session_state.active_dashboard = None

# -------------------
# Login page con effetto artistico
# -------------------

def login_page():
    st.markdown(
        """
        <style>
        /* Background immagine */
        .stApp {
            background: url('https://images.unsplash.com/photo-1521737604893-d14cc237f11d?ixlib=rb-4.0.3&q=80&w=1920&fit=crop') no-repeat center center fixed;
            background-size: cover;
        }

        /* Overlay scuro sopra background */
        .overlay {
            position: fixed;
            top: 0; left: 0;
            width: 100%; height: 100%;
            background: rgba(0, 0, 0, 0.6);
            z-index: 0;
        }

        /* Container centrale */
        .login-container {
            position: relative;
            z-index: 1;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            text-align: center;
            color: white;
        }

        /* HRM artistic */
        .big-title {
            font-size: 5rem;
            font-weight: 900;
            letter-spacing: 6px;
            text-shadow: 2px 2px 15px rgba(0,0,0,0.8);
            margin-bottom: 10px;
        }
        .subtitle {
            font-size: 1.3rem;
            margin-bottom: 30px;
            letter-spacing: 3px;
            text-shadow: 1px 1px 8px rgba(0,0,0,0.6);
        }

        /* Card login */
        .login-box {
            background: rgba(255,255,255,0.15);
            padding: 30px;
            border-radius: 15px;
            backdrop-filter: blur(10px);
            width: 350px;
            box-shadow: 0 8px 20px rgba(0,0,0,0.5);
        }

        /* Label bianche */
        label {
            color: white !important;
            font-weight: 600 !important;
        }

        /* Bottone gradiente */
        .stButton>button {
            background: linear-gradient(90deg, #0D47A1, #1976D2);
            color: white !important;
            border: none !important;
            border-radius: 8px !important;
            padding: 0.6em 1.4em !important;
            font-weight: bold !important;
            width: 100% !important;
            transition: 0.3s;
        }
        .stButton>button:hover {
            background: linear-gradient(90deg, #1976D2, #0D47A1);
            transform: scale(1.02);
        }
        </style>

        <div class="overlay"></div>

        <div class="login-container">
            <div class="big-title">HRM</div>
            <div class="subtitle">Human Resource Management</div>
            <div class="login-box">
        """,
        unsafe_allow_html=True
    )

    # Form login
    with st.form("login_form"):
        username = st.text_input("Username")
        password = st.text_input("Password", type="password")
        submitted = st.form_submit_button("Login")

    if submitted:
        if username == USERNAME and password == PASSWORD:
            st.session_state.logged_in = True
            st.success("Login successful!")
        else:
            st.error("Invalid username or password")

    st.markdown("</div></div>", unsafe_allow_html=True)



# -------------------
# Home page con 3 card
# -------------------
def home_page():
    st.title("Smart HR Dashboard")
    st.caption("Choose a module to explore")

    card_style = """
    <style>
    .card {
        background: #f9f9f9;
        padding: 25px;
        border-radius: 15px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        text-align: center;
        transition: transform 0.2s ease;
        cursor: pointer;
    }
    .card:hover {
        transform: scale(1.03);
        box-shadow: 0 6px 14px rgba(0,0,0,0.15);
    }
    .emoji {
        font-size: 3rem;
    }
    .card-title {
        font-size: 1.2rem;
        font-weight: 600;
        margin-top: 10px;
    }
    .card-desc {
        font-size: 0.9rem;
        color: #555;
    }
    </style>
    """
    st.markdown(card_style, unsafe_allow_html=True)

    col1, col2, col3 = st.columns(3)

    with col1:
        if st.button("Absenteeism", use_container_width=True):
            st.session_state.active_dashboard = "Absenteeism"
        st.markdown("<div class='card'><div class='emoji'>üïí</div><div class='card-title'>Absenteeism</div><div class='card-desc'>Analyze absence patterns and detect trends</div></div>", unsafe_allow_html=True)

    with col2:
        if st.button("Attrition", use_container_width=True):
            st.session_state.active_dashboard = "Attrition"
        st.markdown("<div class='card'><div class='emoji'>üìâ</div><div class='card-title'>Attrition</div><div class='card-desc'>Predict and explain employee turnover</div></div>", unsafe_allow_html=True)

    with col3:
        if st.button("Resume Classification", use_container_width=True):
            st.session_state.active_dashboard = "Resume"
        st.markdown("<div class='card'><div class='emoji'>üìÑ</div><div class='card-title'>Resume Classification</div><div class='card-desc'>Classify resumes and extract insights</div></div>", unsafe_allow_html=True)

# -------------------
# Gestione dashboard con bottone Home
# -------------------

def run_dashboard(dashboard_name):
    # Bottone Home in alto
    if st.button("üè† Home", key="home_button", help="Return to main menu"):
        st.session_state.active_dashboard = None
        st.rerun()

    # Carica il dashboard scelto
    if dashboard_name == "Absenteeism":
        show_absenteeism_analysis()
    elif dashboard_name == "Attrition":
        show_attrition_analysis()
    elif dashboard_name == "Resume":
        classify_resume_app()


# -------------------
# Main
# -------------------
def run_app():
    if not st.session_state.logged_in:
        login_page()
    elif st.session_state.active_dashboard is None:
        home_page()
    else:
        run_dashboard(st.session_state.active_dashboard)

run_app()
